#!/bin/bash
set -e -u -x

subid="$1"
{% if type_session == 'multi-ses' %}
sesid="$2"
{% endif %}
{% for i in range(input_ds.num_ds) %}
{% if input_ds.df.loc[i, 'is_zipped'] is true %}
{{ input_ds.df.loc[i, 'name'].upper() }}_ZIP="${{ loop.index + (2 if type_session == 'multi-ses' else 1) }}"
{% endif %}
{% endfor %}

{% if flag_filterfile %}
# Create a filter file that only allows this session
filterfile=${PWD}/${sesid}_filter.json
echo "{" > ${filterfile}
echo "'fmap': {'datatype': 'fmap'}," >> ${filterfile}
{% if 'fmriprep' in container_name.lower() %}
echo "'bold': {'datatype': 'func', 'session': '$sesid', 'suffix': 'bold'}," >> ${filterfile}
{% elif 'qsiprep' in container_name.lower() %}
echo "'dwi': {'datatype': 'dwi', 'session': '$sesid', 'suffix': 'dwi'}," >> ${filterfile}
{% endif %}
echo "'sbref': {'datatype': 'func', 'session': '$sesid', 'suffix': 'sbref'}," >> ${filterfile}
echo "'flair': {'datatype': 'anat', 'session': '$sesid', 'suffix': 'FLAIR'}," >> ${filterfile}
echo "'t2w': {'datatype': 'anat', 'session': '$sesid', 'suffix': 'T2w'}," >> ${filterfile}
echo "'t1w': {'datatype': 'anat', 'session': '$sesid', 'suffix': 'T1w'}," >> ${filterfile}
echo "'roi': {'datatype': 'anat', 'session': '$sesid', 'suffix': 'roi'}" >> ${filterfile}
echo "}" >> ${filterfile}

# remove ses and get valid json
sed -i "s/'/\\"/g" ${filterfile}
sed -i "s/ses-//g" ${filterfile}
{% endif %}

{% if cmd_unzip_inputds %}
{{ cmd_unzip_inputds }}
{% endif %}

mkdir -p ${PWD}/.git/tmp/wkdir
singularity run --containall --writable-tmpfs \
    -B ${PWD}
{% if templateflow_home %}
    -B {{ templateflow_home }}:{{ templateflow_in_container }}
{% endif %}
{% if flag_fs_license %}
    -B {{ path_fs_license }}:{{ PATH_FS_LICENSE_IN_CONTAINER }}
{% endif %}
{% if templateflow_home %}
    {{ cmd_env_templateflow }}
{% endif %}
    {{ container_path_relToAnalysis }} \
        $PWD/{{ singuRun_input_dir }} \
        $PWD/{{ path_output_folder }} \
        participant \
{% if flag_filterfile %}
        --bids-filter-file "${filterfile}" \
{% endif %}
        {{ cmd_singularity_flags }} \
        --participant-label "${subid}"

{{ cmd_zip }}

rm -rf {{ OUTPUT_MAIN_FOLDERNAME }} .git/tmp/wkdir
{% if flag_filterfile %}
rm ${filterfile}
{% endif %}