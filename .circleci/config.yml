# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

.dockersetup: &dockersetup
  docker:
    - image: pennlinc/slurm-docker-ci:0.9

jobs:
  download_test_data:
    <<: *dockersetup
    resource_class: medium
    working_directory: /home/circleci/src/babs
    steps:
      - checkout:
          path: /home/circleci/src/babs
      - restore_cache:
          keys:
            - test-data-v1
      - run:
          name: Download test datasets
          command: |
            mkdir -p /home/circleci/test_data
            cd /home/circleci/test_data
            # Install datalad if not already in the image
            pip install datalad-osf
            # Download each dataset from origin_input_dataset.yaml
            python3 /home/circleci/src/babs/tests/download_datasets.py
            # Debug output
            echo "Contents of test_data directory:"
            ls -la /home/circleci/test_data/
      - save_cache:
          key: test-data-v1
          paths:
            - /home/circleci/test_data

  pytest: # run pytest
    <<: *dockersetup
    resource_class: xlarge
    working_directory: /home/circleci/src/babs
    steps:
      - checkout:
          path: /home/circleci/src/babs
      - restore_cache:
          keys:
            - test-data-v1
      - run:
          name: pytest of BABS
          no_output_timeout: 1h
          command: |
            pip install .[tests]
            pytest -n 4 -sv --durations=0 --timeout=300 --log-cli-level=DEBUG

  e2e-slurm:
    machine:
      image: ubuntu-2204:current
    # docker:
    #   - image: pennlinc/slurm-docker-ci:0.8
    working_directory: /home/circleci/src/babs
    steps:
      - checkout:
          path: /home/circleci/src/babs
      - restore_cache:
          keys:
            - test-data-v1
      - run:
          name: pytest of BABS
          no_output_timeout: 1h
          command: |
            docker build \
            -t pennlinc/slurm-docker-ci:unstable \
            -f Dockerfile_testing .

            docker run -it \
                -v ${PWD}:/tests \
                -h slurmctl --cap-add sys_admin \
                --privileged \
                pennlinc/slurm-docker-ci:unstable \
                /tests/tests/e2e-slurm/container/walkthrough-tests.sh

  deployable: # checkpoint of deployable: requires all success
    <<: *dockersetup
    steps:
      - run: echo Deploying!

  deploy_pypi: # deploy to pypi
    <<: *dockersetup
    working_directory: /tmp/src/babs
    steps:
      - checkout
      - run:
          name: Generate distribution archives
          command: |
            python3 -m pip install --upgrade build
            python3 -m build
      - run:
          name: Upload packages to PyPI
          command: |
            python3 -m pip install --upgrade twine
            python3 -m twine upload dist/*
        # NOTE: if want to test with test pypi, add `--repository testpypi` after `twine upload`

workflows:
  # version: 2
  build_test_deploy:
    jobs:
      - download_test_data:
          filters:
            tags:
              only: /.*/
      - pytest:
          requires:
            - download_test_data
          filters:
            tags:
              only: /.*/
      - e2e-slurm:
          requires:
            - download_test_data
          filters:
            tags:
              only: /.*/
      - deployable:
          requires:
            - pytest
            - e2e-slurm
          filters:
            branches:
              only: main
            tags:
              only: /.*/
      - deploy_pypi:
          requires:
            - deployable
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
