# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

.dockersetup: &dockersetup
  docker:
    - image: pennlinc/slurm-docker-ci:0.11

jobs:
  download_test_data:
    <<: *dockersetup
    resource_class: medium
    working_directory: /home/circleci/src/babs
    steps:
      - checkout:
          path: /home/circleci/src/babs
      - restore_cache:
          keys:
            - test-data-v2
      - run:
          name: Download test datasets
          command: |
            mkdir -p /home/circleci/test_data
            cd /home/circleci/test_data
            # Install datalad if not already in the image
            pip install datalad-osf
            # Download each dataset from origin_input_dataset.yaml
            python3 /home/circleci/src/babs/tests/download_datasets.py
            # Debug output
            echo "Contents of test_data directory:"
            ls -la /home/circleci/test_data/
      - save_cache:
          key: test-data-v2
          paths:
            - /home/circleci/test_data

  pytest: # run pytest
    <<: *dockersetup
    resource_class: xlarge
    working_directory: /home/circleci/src/babs
    steps:
      - checkout:
          path: /home/circleci/src/babs
      - restore_cache:
          keys:
            - test-data-v2
      - run:
          name: pytest of BABS
          no_output_timeout: 1h
          command: |
            micromamba install -y -c conda-forge shellcheck
            pip install .[tests]
            pytest -n 4 -sv --durations=0 --timeout=300

  e2e-slurm:
    machine:
      image: ubuntu-2204:current
    # docker:
    #   - image: pennlinc/slurm-docker-ci:0.8
    working_directory: /home/circleci/src/babs
    steps:
      - checkout:
          path: /home/circleci/src/babs
      - restore_cache:
          keys:
            - test-data-v2
      - run:
          name: pytest of BABS
          no_output_timeout: 1h
          command: |
            docker build \
            -t pennlinc/slurm-docker-ci:unstable \
            -f Dockerfile_testing .

            # Make a directory that will hold the test artifacts
            mkdir -p ${HOME}/e2e-testing
            docker run -it \
                -v ${PWD}:/tests \
                -v ${HOME}/e2e-testing:/test-temp:rw \
                -h slurmctl --cap-add sys_admin \
                --privileged \
                pennlinc/slurm-docker-ci:unstable \
                /tests/tests/e2e-slurm/container/walkthrough-tests.sh

      - run:
          name: clean up test artifacts
          when: always
          command: |
            TEST_ARTIFACTS_DIR=${HOME}/e2e-testing/test_project/analysis
            sudo chmod -R 777 $TEST_ARTIFACTS_DIR
            # Find and remove all .git directories recursively
            sudo find $TEST_ARTIFACTS_DIR -type d -name ".git" -exec rm -rf {} +
            # Also remove any .git files
            sudo find $TEST_ARTIFACTS_DIR -type f -name ".git" -exec rm -f {} +
            # Remove any .gitignore files
            sudo find $TEST_ARTIFACTS_DIR -type f -name ".gitignore" -exec rm -f {} +
            # Remove any .gitattributes files
            sudo find $TEST_ARTIFACTS_DIR -type f -name ".gitattributes" -exec rm -f {} +
            sudo find $TEST_ARTIFACTS_DIR/inputs/data -type d -name "sub-*" -exec rm -rf {} +

      - store_artifacts:
          path: ${HOME}/e2e-testing/test_project/analysis
          destination: test-artifacts

  deployable: # checkpoint of deployable: requires all success
    <<: *dockersetup
    steps:
      - run: echo Deploying!

  deploy_pypi: # deploy to pypi
    resource_class: small
    docker:
      - image: cimg/python:3.11.11
    working_directory: /tmp/src/babs
    steps:
      - checkout
      - run:
          name: Update build tools
          command: pip install --upgrade build twine
      - run:
          name: Build BABS
          command: python -m build
      - run:
          name: Upload packages to PyPI
          command: python -m twine upload -u __token__ -p ${PYPI_PASS} dist/babs*

workflows:
  # version: 2
  build_test_deploy:
    jobs:
      - download_test_data:
          filters:
            tags:
              only: /.*/
      - pytest:
          requires:
            - download_test_data
          filters:
            tags:
              only: /.*/
      - e2e-slurm:
          requires:
            - download_test_data
          filters:
            tags:
              only: /.*/
      - deployable:
          requires:
            - pytest
            - e2e-slurm
          filters:
            branches:
              only: main
            tags:
              only: /.*/
      - deploy_pypi:
          requires:
            - deployable
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /.*/
