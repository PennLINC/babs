[build-system]
requires = ["hatchling", "hatch-vcs", "nipreps-versions", "cython", "numpy"]
build-backend = "hatchling.build"

[project]
name = "babs"
description = "BABS: BIDS App BootStrap"
authors = [{ name = "The PennLINC developers" }]
license = { file = "LICENSE" }
requires-python = ">=3.10"
dependencies = [
    "backoff",
    "datalad >= 0.17.2",
    "datalad_container >= 1.1.6",
    "filelock >= 3.8.0",
    "nibabel >=2.2.1",
    "numpy",
    "pandas",
    "pyyaml >= 6.0",
    "qstat >= 0.0.5",
    "regex",
    "tqdm",
]

dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/pennlinc/babs"
Documentation = "https://pennlinc-babs.readthedocs.io/en/stable/"
Paper = "https://doi.org/10.1162/imag_a_00074"

[project.optional-dependencies]
doc = [
    "sphinx == 5.3.0",
    "sphinx-argparse == 0.4.0",
    "recommonmark == 0.7.1",
    "jinja2<3.1.0",             # to fix the issue re: jinja2
    "docutils <0.17",           # to fix the issue of bullet points not rendered
    "sphinx_design",            # for adding in-line badges etc
    "sphinx_rtd_theme",         # needed by readthedocs
]
dev = ["ruff ~= 0.4.3", "pre-commit"]
tests = [
    "pytest",
    "pytest-xdist", # for running pytest in parallel
    "pytest-order", # for ordering test execution
    "datalad-osf",
]
maint = ["fuzzywuzzy", "python-Levenshtein"]

# Aliases
all = ["babs[dev,doc,maint,tests]"]

[project.scripts]
babs = "babs.cli:_main"
babs-init = "babs.cli:_enter_init"
babs-check-setup = "babs.cli:_enter_check_setup"
babs-submit = "babs.cli:_enter_submit"
babs-status = "babs.cli:_enter_status"
babs-merge = "babs.cli:_enter_merge"
babs-unzip = "babs.cli:_enter_unzip"


#
# Hatch configurations
#

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.sdist]
exclude = [".git_archival.txt"]       # No longer needed in sdist
include = ["babs/templates/*.jinja2"]

[tool.hatch.build.targets.wheel]
packages = ["babs"]
exclude = [
    "babs/tests/data", # Large test data directory
]
include = ["babs/templates/*.jinja2"]

##  The following two sections configure setuptools_scm in the hatch way

[tool.hatch.version]
source = "vcs"
# raw-options = { version_scheme = "nipreps-calver" }

[tool.hatch.build.hooks.vcs]
version-file = "babs/_version.py"

#
# Developer tool configurations
#

# Disable black
[tool.black]
exclude = ".*"

[tool.ruff]
line-length = 99

[tool.ruff.lint]
extend-select = [
    "F",
    "E",
    "W",
    "I",
    "UP",
    "YTT",
    "S",
    "BLE",
    "B",
    "A",
    # "CPY",
    "C4",
    "DTZ",
    "T10",
    # "EM",
    "EXE",
    "FA",
    "ISC",
    "ICN",
    "PT",
    "Q",
]
ignore = [
    "S101",   # Ignore use of assert for now
    "S105",
    "S311",   # We are not using random for cryptographic purposes
    "ISC001",
    "S603",
    "S701",
    "S605",   # TODO: Fix these
    "DTZ005", # TODO: Fix these
    "DTZ007", # TODO: Fix these
    "B904",   # TODO: Fix these
    "A001",   # TODO: Fix these
    "B006",   # TODO: Fix these
    "S607",   # TODO: Fix these
    "S108",   # TODO: Fix these
    "S602",   # TODO: Fix these
    "E402",   # TODO: Fix these
    "UP028",  # TODO: Fix these
    "UP031",  # TODO: Fix these
    "BLE001", # TODO: Fix these
]

[tool.ruff.lint.flake8-quotes]
inline-quotes = "single"

[tool.ruff.lint.extend-per-file-ignores]
"*/test_*.py" = ["S101", "F811"]
"docs/conf.py" = ["A001"]
"docs/sphinxext/github_link.py" = ["BLE001"]

[tool.ruff.format]
quote-style = "single"
exclude = ["docs/conf.py"]

[tool.pytest.ini_options]
addopts = '-m "not integration"'
markers = []
env = ["RUNNING_PYTEST = 1"]

[tool.coverage.run]
branch = true
omit = ["*/tests/*", "*/__init__.py", "*/conftest.py", "babs/_version.py"]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = ['raise NotImplementedError', 'warnings\.warn']
