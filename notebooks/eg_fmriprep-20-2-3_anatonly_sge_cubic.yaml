# Below is example config yaml file for fMRIPrep:
# currently we only support the option of "singularity_run"
# In the future, we might:
    # Priority: cli_call > singularity_run > cli_options
        # If anything provided at higher level, the lower levels will be ignored.

# below is currently not supported.
# In the future: below will overwrite `cli_options`!
# Matt: below is easiest, and should be easy to implement
cli_call: |
    -w $BABS_TMPDIR \   # instead of using `${PWD}/.git/tmp/wkdir`, you may specify `BABS_TMPDIR` and `BABS` will change this placeholder to the former string.
    --n_cpus 1 \
    --stop-on-first-crash \
    --fs-license-file code/license.txt \
    --skip-bids-validation \
    --output-spaces MNI152NLin6Asym:res-2 \
    --force-bbr \
    --cifti-output 91k \
    -v â€“v

# You should not have flags of : `--participant-label`, or `--bids-filter-file`!
# TODO: detect these strings and throw out warning message & replace them?

# below is the only option we currently support:

# placeholders:
    # "$BABS_TMPDIR"
    # "", `Null`, `NULL` (without quotes), or with quotes: "Null", "NULL":
        # will all be taken as there is no value in the arguments
singularity_run:
    #--test: NULL
    # $INPUT_PATH: inputs/data/BIDS   # the key is a placeholder; optional to one input ds
    -w: "$BABS_TMPDIR"   # this is a placeholder. To be changed to `${PWD}/.git/tmp/wkdir`
    --n_cpus: 1
    --stop-on-first-crash: ""
    --fs-license-file: "/cbica/projects/BABS/software/FreeSurfer/license.txt"  # path to FS license file
    --skip-bids-validation: Null  # Null or NULL is also a placeholder
    --output-spaces: MNI152NLin6Asym:res-2
    --force-bbr: ""
    #--cifti-output: 91k   # ADD THIS WHEN FULL RUN!
    -v: '-v'   # TODO: explain in docs: this is for double "-v". # as it's dict, cannot have identical keys... otherwise the latter key + value will overwrite the former one..# if triple `-v`: `-v: '-v -v'`
    --sloppy: ''      # ADD THIS WHEN TEST RUN!
    --anat-only: ''   # ADD THIS WHEN ONLY RUNNING FREESURFER!
    # --fs-no-reconall: ''   # ADD THIS WHEN TEST RUN!

# Output foldername(s) to be zipped, and the BIDS App version to be included in the zip filename(s):
#   We use fMRIPrep's version string when zipping 'freesurfer' folder.
zip_foldernames:
    freesurfer: "20-2-3"   # folder 'freesurfer' will be zipped into 'sub-xx_ses-yy_freesurfer-20-2-3.zip'

# environment_variable:
#     SINGULARITYENV_TEMPLATEFLOW_HOME: '~/.cache/templateflow'   # no need, default in babs

# TODO: add to docs: best to quote the values if numbers only
cluster_resources:
    interpreting_shell: /bin/bash   # "-S /bin/bash" on cubic
    hard_memory_limit: 25G   # "-l h_vmem=25G" on cubic
    # soft_memory_limit: 23.5G   # "-l s_vmem=23.5G" on cubic  # no need to set s_vmem
    temporary_disk_space: 200G   # "-l tmpfree=200G" on cubic  # this is highly-recommended on cubic
    hard_runtime_limit: "48:00:00"    # 2 days # ADD THIS WHEN ONLY RUNNING FREESURFER!
    customized_text: |
        #$ -R y
        #$ -l hostname=!compute-fed*
# Notes: Above `customized_text` is Penn Med CUBIC cluster specific.
#   So it's probably not relevant for other clusters

# Users need to add their customized bash command below,
#   they will be used as preambles in `participant_job.sh`
#   the commands should not be quoted!
script_preamble: |
    source ${CONDA_PREFIX}/bin/activate mydatalad    # Penn Med CUBIC cluster; replace 'mydatalad' with your conda env name
    echo "I am running BABS."   # this is an example command to show how to add another line; not necessary to include.

# ^^ conda env above: where the scripts generated by BABS will run
#   not necessary the same one for running `babs-init`
# ^^ based on what you need on your cluster; some people even don't use `conda`...
# for MSI, might need to add command e.g., "module_load"

# Where to run the jobs:
job_compute_space: "${CBICA_TMPDIR}"   # Penn Med CUBIC cluster tmp space

# Below is to filter out subjects (or sessions)
#   right now we only filter based on unzipped dataset
required_files:
    $INPUT_DATASET_#1:
        # - "func/*_bold.nii*"    # ADD THIS WHEN RUNNING FMRIPREP!
        - "anat/*_T1w.nii*"

# - "dwi/*_dwi.nii*"   # QSIPrep

# Alert messages that might be found in log files of failed jobs:
#   These messages may be helpful for debugging errors in failed jobs.
alert_log_messages:
    stdout:
        - "Exception: No T1w images found for"  # probably not needed, after setting `required_files`
        - "Excessive topologic defect encountered"
        - "Cannot allocate memory"
        - "mris_curvature_stats: Could not open file"
        - "Numerical result out of range"
        - "fMRIPrep failed"
    # stderr:
    #     - "xxxxx"


# Below generic full list of options of fMRIPrep is based on fMRIPrep version xxxx.
# there are almost 70 options in fMRIPrep (22.0.0) and QSIPrep (0.15.2?), and 30+ options in XCP-D
# currently we are not supporting this option.
# In the future it might: if cli_call is provided, only read cli_call;
    # otherwise, check out cli_options
cli_options:
    - n_cpus:
      value: 1
      type: int
      desc: <description>   # why we need this desc? People won't check out another documentation but directly ask you.....
      argstr: "--n_cpus %d"
    - stop-on-first-crash:
      value: True
      type: bool
      desc: if True, just "--"; if False, ; if Null, not to include this flag at all
    - xxx:
        value: Null
        type: str    # this means that this Null will go into, instead of interpreted by BABS

