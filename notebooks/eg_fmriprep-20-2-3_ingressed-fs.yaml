# This is an example config yaml file for:
#   BIDS App:         fMRIPrep ("fmriprep")
#   BIDS App version: 20.2.3
#   Task:             Preprocessing fMRI data with FreeSurfer results ingressed
#   Which system:     SGE or Slurm

# WARNING!!!
#   This is only an example, which may not necessarily fit your purpose,
#   or be an optimized solution for your case,
#   or be compatible to the BIDS App version you're using.
#   Therefore, please change and tailor it for your case before use it!!!

# Arguments in `singularity run`:
#   In this example, we assume:
#   1. You used BABS to run `fMRIPrep --anat-only` w/ fMRIPrep version 20.2.3, which used legacy output layout
#   2. From 1, you have got output folder called `freesurfer` (i.e., `zip_foldernames`: `freesurfer`)
#   3. When running `babs init` for current use case, argument `--input` for `babs init` is as below:
#     --input BIDS <path/to/raw_BIDS_dataset>    # 1st input dataset \
#     --input freesurfer <path/to/cloned_freesurfer_output_ria>    # 2nd input dataset \
singularity_run:
    $SUBJECT_SELECTION_FLAG: "--participant-label"
    $INPUT_PATH: inputs/data/BIDS # the key `$INPUT_PATH` is a placeholder, which must be included first as there are two input datasets
    -w: "$BABS_TMPDIR" # this is a placeholder. To be changed to `${PWD}/.git/tmp/wkdir`
    --n_cpus: "1"
    --stop-on-first-crash: ""
    --fs-license-file: "/path/to/FreeSurfer/license.txt" # [FIX ME] path to FreeSurfer license file
    --skip-bids-validation: ""
    --output-spaces: "MNI152NLin6Asym:res-2"
    --force-bbr: ""
    --cifti-output: 91k
    -v: "-v"
    --fs-subjects-dir: inputs/data/freesurfer/freesurfer

# Output foldername(s) to be zipped, and the BIDS App version to be included in the zip filename(s):
zip_foldernames:
    fmriprep: "20-2-3" # folder 'fmriprep' will be zipped into 'sub-xx_(ses-yy_)fmriprep-20-2-3.zip'

cluster_resources:
    interpreting_shell: "/bin/bash"
    hard_memory_limit: 24G
    number_of_cpus: "2"
    temporary_disk_space: 200G

# Necessary commands to be run first:
#   [FIX ME] change or add commands for setting up the virtual environment, for loading necessary modules, etc
script_preamble: |
    source xxxx    # [FIX ME or DELETE ME] source any necessary program
    conda activate my_conda_env_name   # [FIX ME] replace 'my_conda_env_name' with your environment variable name

# Where to run the jobs:
job_compute_space: "/path/to/temporary_compute_space" # [FIX ME] replace "/path/to/temporary_compute_space" with yours

# Below is to filter out subjects (or sessions). Only those with required files will be kept.
required_files:
    $INPUT_DATASET_#1:
        - "func/*_bold.nii*"
        - "anat/*_T1w.nii*"
# `alert_log_messages`: Here we did not provide examples for section `alert_log_messages`. However feel free to add it!
